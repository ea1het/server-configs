#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    stats       socket ipv4@127.0.0.1:9999 level admin
    stats       socket /var/lib/haproxy/stats
    stats       timeout 2m
    
    log         127.0.0.1 local2
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon
    # debug

    tune.ssl.default-dh-param 2048
    ssl-default-bind-options ssl-min-ver TLSv1.2
    ssl-default-bind-options ssl-max-ver TLSv1.3
    ssl-default-bind-ciphers AES128+EECDH:AES128+EDH


#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option                  forwardfor except 127.0.0.0/8
    option                  http-keep-alive
    option                  http-server-close
    option                  tcp-smart-accept
    option                  tcp-smart-connect
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout http-keep-alive 10s
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout check           10s
    timeout queue           1m
    maxconn                 2048
    errorfile 408 /dev/null
    errorfile 503 /etc/haproxy/errorfiles/503.http

listen STATS
    bind *:9000
    mode http
    stats enable
    stats hide-version
    stats realm HAProxy\ Stats
    stats uri /
    stats auth YourUsername:YourPassword
    stats refresh 150s
    
#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------

frontend FE_HTTP
    bind haproxy:80
    http-request set-header X-Client-IP req.hdr_ip([X-Forwarded-For])
    reqadd X-Forwarded-Proto:\ http
      acl is_letsencrypt path_beg /.well-known/acme-challenge/
      use_backend BE_LE if is_letsencrypt
    default_backend BE_NGINX

frontend FE_HTTPS
    bind haproxy:443 ssl crt-list /etc/haproxy/crt-list.txt
    option socket-stats
    http-request set-header X-Client-IP req.hdr_ip([X-Forwarded-For])
    reqadd X-Forwarded-Proto:\ https
      redirect prefix https://dapnet.es code 301 if { hdr(host) -i www.dapnet.es }
      redirect prefix https://dapnet.es code 301 if { hdr_reg(host) -i [^\.]*\.dapnet\.es$ }
      redirect prefix https://hampager.es code 301 if { hdr(host) -i www.hampager.es }
      use_backend BE_DAPNET if { ssl_fc_sni dapnet.es }
      use_backend BE_DAPNET if { ssl_fc_sni hampager.es }
      acl is_dapnet hdr(host) -i dapnet.es
      acl is_dapnet hdr(host) -i hampager.es
      use_backend BE_DAPNET if is_dapnet
    default_backend BE_NGINX


#---------------------------------------------------------------------
# backends
#---------------------------------------------------------------------

backend BE_LE
    server letsencrypt 127.0.0.1:8888

backend BE_DAPNET
    redirect scheme https code 301 if !{ ssl_fc }
    server dapnet 192.168.0.10:80 weight 1 check

backend BE_NGINX
    redirect scheme https code 301 if !{ ssl_fc }
    server nginx1 192.168.0.21:80 weight 1 check
    server nginx2 192.168.0.22:80 weight 1 check
